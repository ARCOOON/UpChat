name: Building Release

# Triggers the workflow
on:
  # Trigger on push in main
  push:
    branches:
      - main
      - 'releases/**'
    tags:
      - v*
    # paths: ['app/**']

  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        run: git clone https://gitea.example.com/username/repo.git .

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        run: sudo apt-get install -y openjdk-17-jdk
        env:
          JAVA_HOME: /usr/lib/jvm/java-17-oracle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          unzip commandlinetools-linux-8092744_latest.zip -d $HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/bin:$PATH
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-30" "build-tools;30.0.3"

      - name: Setup google-services.json
        env:
          google_service: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $google_service > ./app/google-services.json

      - name: Cleaning builds
        run: ./gradlew clean

      - name: Testing
        run: ./gradlew check

      - name: Building Release apk
        run: ./gradlew assembleRelease --stacktrace

      - name: Building Bundle Release
        run: ./gradlew bundleRelease --stacktrace

      - name: Get aab build path
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> build_output.txt

      - name: Get apk build path
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> build_output.txt

      - name: Upload AAB Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AAB
          path: ${{ steps.releaseAab.outputs.aabfile }}
          if-no-files-found: error
          compression-level: 0

      - name: Upload APK Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: APK
          path: ${{ steps.releaseApk.outputs.apkfile }}
          if-no-files-found: error
          compression-level: 0

      - run: mv ./app/build/reports/lint-results-debug.html ./lint-results-debug.html

    - name: Upload Check Results to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Check_Result
        path: ./lint-results-debug.html
        if-no-files-found: ignore
        compression-level: 0
